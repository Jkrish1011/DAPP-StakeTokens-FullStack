{"ast":null,"code":"var _jsxFileName = \"/Users/jk/Documents/Online Classes/Solidity Class/defi-stake-yield-brownie/front_end/src/components/yourWallet/WalletBalance.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEthers, useTokenBalance } from \"@usedapp/core\";\nimport { formatUnits } from \"@ethersproject/units\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const WalletBalance = _ref => {\n  _s();\n\n  let {\n    token\n  } = _ref;\n  const {\n    image,\n    address,\n    name\n  } = token;\n  const {\n    account\n  } = useEthers();\n  const tokenBalance = useTokenBalance(address, account);\n  console.log(tokenBalance === null || tokenBalance === void 0 ? void 0 : tokenBalance.toString());\n  const formattedTokenBalance = tokenBalance ? parseFloat(formatUnits(tokenBalance, 18)) : 0;\n  return /*#__PURE__*/_jsxDEV(BalanceMsg, {\n    children: formattedTokenBalance\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 13\n  }, this);\n};\n\n_s(WalletBalance, \"vSZK4EgNg8pqofSq3Duu4AVq9gI=\", false, function () {\n  return [useEthers, useTokenBalance];\n});\n\n_c = WalletBalance;\n\nvar _c;\n\n$RefreshReg$(_c, \"WalletBalance\");","map":{"version":3,"sources":["/Users/jk/Documents/Online Classes/Solidity Class/defi-stake-yield-brownie/front_end/src/components/yourWallet/WalletBalance.tsx"],"names":["useEthers","useTokenBalance","formatUnits","WalletBalance","token","image","address","name","account","tokenBalance","console","log","toString","formattedTokenBalance","parseFloat"],"mappings":";;;AACA,SAAQA,SAAR,EAA6BC,eAA7B,QAAmD,eAAnD;AACA,SAAQC,WAAR,QAA0B,sBAA1B;;AAOA,OAAO,MAAMC,aAAa,GAAG,QAAiC;AAAA;;AAAA,MAAhC;AAACC,IAAAA;AAAD,GAAgC;AAC1D,QAAM;AAACC,IAAAA,KAAD;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAAyBH,KAA/B;AACA,QAAM;AAACI,IAAAA;AAAD,MAAYR,SAAS,EAA3B;AACA,QAAMS,YAAY,GAAGR,eAAe,CAACK,OAAD,EAAUE,OAAV,CAApC;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYF,YAAZ,aAAYA,YAAZ,uBAAYA,YAAY,CAAEG,QAAd,EAAZ;AACA,QAAMC,qBAA6B,GAAGJ,YAAY,GAAGK,UAAU,CAACZ,WAAW,CAACO,YAAD,EAAe,EAAf,CAAZ,CAAb,GAA+C,CAAjG;AACA,sBAAQ,QAAC,UAAD;AAAA,cAAaI;AAAb;AAAA;AAAA;AAAA;AAAA,UAAR;AACH,CAPM;;GAAMV,a;UAESH,S,EACGC,e;;;KAHZE,a","sourcesContent":["import {Token} from \"../Main\"\nimport {useEthers, useToken, useTokenBalance} from \"@usedapp/core\"\nimport {formatUnits} from \"@ethersproject/units\"\n\n\nexport interface WalletBalanceProps {\n    token: Token\n}\n\nexport const WalletBalance = ({token}: WalletBalanceProps) => {\n    const {image, address, name} = token\n    const {account} = useEthers()\n    const tokenBalance = useTokenBalance(address, account)\n    console.log(tokenBalance?.toString())\n    const formattedTokenBalance: number = tokenBalance ? parseFloat(formatUnits(tokenBalance, 18)) : 0\n    return (<BalanceMsg>{formattedTokenBalance}</BalanceMsg>)\n}"]},"metadata":{},"sourceType":"module"}