{"ast":null,"code":"var _jsxFileName = \"/Users/jk/Documents/Online Classes/Solidity Class/defi-stake-yield-brownie/front_end/src/components/yourWallet/StakeForm.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEthers, useTokenBalance } from \"@usedapp/core\";\nimport { formatUnits } from \"@ethersproject/units\";\nimport { Button, Input } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const StakeForm = _ref => {\n  _s();\n\n  let {\n    token\n  } = _ref;\n  const {\n    address: tokenAddress,\n    name\n  } = token;\n  const {\n    account\n  } = useEthers();\n  const tokenBalance = useTokenBalance(tokenAddress, account);\n  const formattedTokenBalance = tokenBalance ? parseFloat(formatUnits(tokenBalance, 18)) : 0;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      color: \"primary\",\n      size: \"large\",\n      children: \"Stake!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(StakeForm, \"NqEQKrgyRTaT6/yyWoioelkAkU4=\", false, function () {\n  return [useEthers, useTokenBalance];\n});\n\n_c = StakeForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"StakeForm\");","map":{"version":3,"sources":["/Users/jk/Documents/Online Classes/Solidity Class/defi-stake-yield-brownie/front_end/src/components/yourWallet/StakeForm.tsx"],"names":["useEthers","useTokenBalance","formatUnits","Button","Input","StakeForm","token","address","tokenAddress","name","account","tokenBalance","formattedTokenBalance","parseFloat"],"mappings":";;;AACA,SAAQA,SAAR,EAAmBC,eAAnB,QAAyC,eAAzC;AACA,SAAQC,WAAR,QAA0B,sBAA1B;AACA,SAAQC,MAAR,EAAgBC,KAAhB,QAA4B,mBAA5B;;;AAMA,OAAO,MAAMC,SAAS,GAAG,QAA6B;AAAA;;AAAA,MAA5B;AAACC,IAAAA;AAAD,GAA4B;AAClD,QAAM;AAACC,IAAAA,OAAO,EAAEC,YAAV;AAAwBC,IAAAA;AAAxB,MAAgCH,KAAtC;AACA,QAAM;AAAEI,IAAAA;AAAF,MAAcV,SAAS,EAA7B;AACA,QAAMW,YAAY,GAAGV,eAAe,CAACO,YAAD,EAAeE,OAAf,CAApC;AACA,QAAME,qBAA6B,GAAGD,YAAY,GAAGE,UAAU,CAACX,WAAW,CAACS,YAAD,EAAe,EAAf,CAAZ,CAAb,GAA+C,CAAjG;AAEA,sBACI;AAAA,4BACI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,SAAd;AAAwB,MAAA,IAAI,EAAC,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AAQH,CAdM;;GAAMN,S;UAEWL,S,EACCC,e;;;KAHZI,S","sourcesContent":["import {Token} from \"../Main\"\nimport {useEthers, useTokenBalance} from \"@usedapp/core\"\nimport {formatUnits} from \"@ethersproject/units\"\nimport {Button, Input} from \"@material-ui/core\"\n\nexport interface StakeFormProps {\n    token: Token\n}\n\nexport const StakeForm = ({token}: StakeFormProps) => {\n    const {address: tokenAddress, name} = token\n    const { account } = useEthers()\n    const tokenBalance = useTokenBalance(tokenAddress, account)\n    const formattedTokenBalance: number = tokenBalance ? parseFloat(formatUnits(tokenBalance, 18)) : 0\n\n    return(\n        <>\n            <Input />\n            <Button color=\"primary\" size=\"large\">\n                Stake!\n            </Button>\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}