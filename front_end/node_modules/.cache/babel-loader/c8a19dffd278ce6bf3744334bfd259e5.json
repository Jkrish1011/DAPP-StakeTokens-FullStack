{"ast":null,"code":"var _jsxFileName = \"/Users/jk/Documents/Online Classes/Solidity Class/defi-stake-yield-brownie/front_end/src/components/Main.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEthers } from \"@usedapp/core\";\nimport helperConfig from \"../helper-config.json\";\nimport networkMapping from \"../chain-info/deployments/map.json\";\nimport { constants } from \"ethers\";\nimport brownieConfig from \"../brownie-config.json\";\nimport dapp from \"../dapp.png\";\nimport eth from \"../eth.png\";\nimport fau from \"../dai.png\";\nimport { YourWallet } from \"./yourWallet/YourWallet\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({}));\nexport const Main = () => {\n  _s();\n\n  const {\n    chainId,\n    error\n  } = useEthers();\n  const networkName = chainId ? helperConfig[chainId.toString()] : \"dev\";\n  console.log(chainId);\n  console.log(networkName);\n  const dappTokenAddress = chainId ? networkMapping[String(chainId)][\"DappToken\"][0] : constants.AddressZero;\n  const wethTokenAddress = chainId ? brownieConfig[\"networks\"][networkName][\"weth_token\"] : constants.AddressZero;\n  const fauTokenAddress = chainId ? brownieConfig[\"networks\"][networkName][\"fau_token\"] : constants.AddressZero;\n  const supportedTokens = [{\n    image: dapp,\n    address: dappTokenAddress,\n    name: \"DAPP\"\n  }, {\n    image: eth,\n    address: wethTokenAddress,\n    name: \"ETH\"\n  }, {\n    image: fau,\n    address: fauTokenAddress,\n    name: \"DAI\"\n  }];\n  return /*#__PURE__*/_jsxDEV(YourWallet, {\n    supportTokens: supportedTokens\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 13\n  }, this);\n};\n\n_s(Main, \"EGNdA9nTOwAJbJGKP3tbBkQtqz8=\", false, function () {\n  return [useEthers];\n});\n\n_c = Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/Users/jk/Documents/Online Classes/Solidity Class/defi-stake-yield-brownie/front_end/src/components/Main.tsx"],"names":["useEthers","helperConfig","networkMapping","constants","brownieConfig","dapp","eth","fau","YourWallet","makeStyles","useStyles","theme","Main","chainId","error","networkName","toString","console","log","dappTokenAddress","String","AddressZero","wethTokenAddress","fauTokenAddress","supportedTokens","image","address","name"],"mappings":";;;AAAA,SAAQA,SAAR,QAAwB,eAAxB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SAAQC,SAAR,QAAwB,QAAxB;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,GAAP,MAAgB,YAAhB;AACA,OAAOC,GAAP,MAAgB,YAAhB;AACA,SAASC,UAAT,QAA2B,yBAA3B;AACA,SAAQC,UAAR,QAAyB,mBAAzB;;AAOA,MAAMC,SAAS,GAAGD,UAAU,CAAEE,KAAD,KAAY,EAAZ,CAAD,CAA5B;AAIA,OAAO,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACtB,QAAM;AAACC,IAAAA,OAAD;AAAUC,IAAAA;AAAV,MAAmBd,SAAS,EAAlC;AACA,QAAMe,WAAW,GAAGF,OAAO,GAAEZ,YAAY,CAACY,OAAO,CAACG,QAAR,EAAD,CAAd,GAAqC,KAAhE;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYH,WAAZ;AAEA,QAAMI,gBAAgB,GAAGN,OAAO,GAAEX,cAAc,CAACkB,MAAM,CAACP,OAAD,CAAP,CAAd,CAAgC,WAAhC,EAA6C,CAA7C,CAAF,GAAoDV,SAAS,CAACkB,WAA9F;AACA,QAAMC,gBAAgB,GAAGT,OAAO,GAAET,aAAa,CAAC,UAAD,CAAb,CAA0BW,WAA1B,EAAuC,YAAvC,CAAF,GAAyDZ,SAAS,CAACkB,WAAnG;AACA,QAAME,eAAe,GAAGV,OAAO,GAAET,aAAa,CAAC,UAAD,CAAb,CAA0BW,WAA1B,EAAuC,WAAvC,CAAF,GAAwDZ,SAAS,CAACkB,WAAjG;AAEA,QAAMG,eAA6B,GAAE,CAAC;AAClCC,IAAAA,KAAK,EAAEpB,IAD2B;AAElCqB,IAAAA,OAAO,EAAEP,gBAFyB;AAGlCQ,IAAAA,IAAI,EAAE;AAH4B,GAAD,EAKrC;AACIF,IAAAA,KAAK,EAAEnB,GADX;AAEIoB,IAAAA,OAAO,EAAEJ,gBAFb;AAGIK,IAAAA,IAAI,EAAE;AAHV,GALqC,EAUrC;AACIF,IAAAA,KAAK,EAAElB,GADX;AAEImB,IAAAA,OAAO,EAAEH,eAFb;AAGII,IAAAA,IAAI,EAAE;AAHV,GAVqC,CAArC;AAeA,sBAAQ,QAAC,UAAD;AAAY,IAAA,aAAa,EAAEH;AAA3B;AAAA;AAAA;AAAA;AAAA,UAAR;AACH,CA1BM;;GAAMZ,I;UACgBZ,S;;;KADhBY,I","sourcesContent":["import {useEthers} from \"@usedapp/core\"\nimport helperConfig from \"../helper-config.json\"\nimport networkMapping from \"../chain-info/deployments/map.json\"\nimport {constants} from \"ethers\"\nimport brownieConfig from \"../brownie-config.json\"\nimport dapp from \"../dapp.png\"\nimport eth from \"../eth.png\"\nimport fau from \"../dai.png\"\nimport { YourWallet } from \"./yourWallet/YourWallet\"\nimport {makeStyles} from \"@material-ui/core\"\n\nexport type Token = {\n    image: string,\n    address: string,\n    name: string\n}\nconst useStyles = makeStyles((theme) => ({\n    \n}))\n\nexport const Main = () => {\n    const {chainId, error} = useEthers()\n    const networkName = chainId? helperConfig[chainId.toString()] : \"dev\"\n    console.log(chainId)\n    console.log(networkName)\n\n    const dappTokenAddress = chainId? networkMapping[String(chainId)][\"DappToken\"][0] : constants.AddressZero\n    const wethTokenAddress = chainId? brownieConfig[\"networks\"][networkName][\"weth_token\"] : constants.AddressZero\n    const fauTokenAddress = chainId? brownieConfig[\"networks\"][networkName][\"fau_token\"] : constants.AddressZero\n\n    const supportedTokens: Array<Token>= [{\n        image: dapp,\n        address: dappTokenAddress,\n        name: \"DAPP\"\n    },\n    {\n        image: eth,\n        address: wethTokenAddress,\n        name: \"ETH\"\n    },\n    {\n        image: fau,\n        address: fauTokenAddress,\n        name: \"DAI\"\n    }]\n    return (<YourWallet supportTokens={supportedTokens} />)\n}"]},"metadata":{},"sourceType":"module"}